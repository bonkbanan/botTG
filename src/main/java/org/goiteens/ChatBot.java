package org.goiteens;

import java.util.*;

public class ChatBot {
    private static Map<String, Integer> professions;
    private static Map<String, Integer> dreams;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String message = scanner.nextLine();

        initProfessions();
        initDreams();

        String botAnswer = process(message);
        System.out.println(botAnswer);
    }
    
    public static void initProfessions() {
        professions = new LinkedHashMap<>();

        professions.put("Designer", 20000);
        professions.put("Java", 55000);
        professions.put("Frontend", 40000);
    }

    public static void initDreams() {
        dreams = new LinkedHashMap<>();

        dreams.put("–ú–∞—à–∏–Ω–∞", 260000);
        dreams.put("iPhone", 27000);
        dreams.put("Macbook", 270000);
    }

    public static String process(String message) {
        if ("—Å–ª–∞–≤–∞ —É–∫—Ä–∞—ó–Ω—ñ".equals(message.toLowerCase())) {
            return "–ì–µ—Ä–æ—è–º –°–ª–∞–≤–∞";
        }
        if("/start".equals(message.toLowerCase())){
            return "–ü—Ä–∏–≤—ñ—Ç, —è Banan's Bot.\n"+
                    "–Ø –≤–º—ñ—é:\n" +
                    "–í—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –ø—Ä–∏–≤—ñ—Ç,hello,hi —ñ —ñ–Ω—à—ñ –£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è.\n" +
                    "–í–º—ñ—é –≥—Ä–∞—Ç–∏ —É –∫–∞–º—ñ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ñ-–ø–∞–ø—ñ—Ä. –î–ª—è –ø–æ—á–∞—Ç–∫—É –Ω–∞–ø–∏—à—ñ—Ç—å '–î–∞–≤–∞–π –ó—ñ–≥—Ä–∞—î–º'.\n"+
                    "–ú–æ–∂—É –¥–∞—Ç–∏ —Å–≤—ñ–π–∂–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç. –î–ª—è —Ü—å–æ–≥–æ –Ω–∞–ø–∏—à—ñ—Ç—å '–ö—É—Ä—Å –í–∞–ª—é—Ç'.\n";
        }
        if("help".equals(message.toLowerCase()) || "–∫–æ–º–∞–Ω–¥–∏".equals(message.toLowerCase()) || "–¥–æ–ø–æ–º–æ–∂–∏".equals(message.toLowerCase())){
            return "–Ø –≤–º—ñ—é:\n" +
            "–í—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –ø—Ä–∏–≤—ñ—Ç,hello,hi —ñ —ñ–Ω—à—ñ –£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è.\n" +
            "–í–º—ñ—é –≥—Ä–∞—Ç–∏ —É –∫–∞–º—ñ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ñ-–ø–∞–ø—ñ—Ä. –î–ª—è –ø–æ—á–∞—Ç–∫—É –Ω–∞–ø–∏—à—ñ—Ç—å '–î–∞–≤–∞–π –ó—ñ–≥—Ä–∞—î–º'.\n"+
            "–ú–æ–∂—É –¥–∞—Ç–∏ —Å–≤—ñ–π–∂–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç. –î–ª—è —Ü—å–æ–≥–æ –Ω–∞–ø–∏—à—ñ—Ç—å '–ö—É—Ä—Å –í–∞–ª—é—Ç'.\n";
        }
        if ("—Å–ª–∞–≤–∞ –Ω–∞—Ü—ñ—ó".equals(message.toLowerCase())){
            return "–°–º–µ—Ä—Ç—å –í–æ—Ä–æ–≥–∞–º";
        }
        if ("–ø—É—Ç—ñ–Ω".equals(message.toLowerCase())){
            return "–•****";
        }
        if("—É–∫—Ä–∞—ó–Ω–∞".equals(message.toLowerCase()) || "üá∫üá¶".equals(message.toLowerCase()) || "üíôüíõ".equals(message.toLowerCase())){
            return "–ü–æ–Ω–∞–¥ –£—Å–µ";
        }

        if (isHelloMessage(message)) {
            String botName = "Banan's Bot";
            return "–í—ñ—Ç–∞—é, —è - " + botName;
        }

        return "–í–∏–±–∞—á—Ç–µ, –∞–ª–µ —è –Ω–µ –Ω–∞–π—à–æ–≤ —É –≤–∞—à–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥—É, —è–∫—É —è –º–æ–∂—É –≤–∏–∫–æ–Ω–∞—Ç–∏(";
    }

    public static int find(String message, Map<String, Integer> data) {
        message = message.toLowerCase();

        for(String word: data.keySet()) {
            String lowerCasedWord = word.toLowerCase();

            if (message.contains(lowerCasedWord)) {
                return data.get(word);
            }
        }

        return -1;
    }
    
    public static int calculateMonthCount(int dreamCost, int professionSalary) {
        int monthCount = dreamCost / professionSalary;
        monthCount = validateMonthCount(monthCount);
        return monthCount;
    }

    public static int validateMonthCount(int monthCount) {
        if (monthCount == 0) {
            return 1;
        }

        return monthCount;
    }



    private static boolean isHelloMessage(String message) {
        message = message.toLowerCase();

        List<String> list = new ArrayList<>();
        list.add("–ø—Ä–∏–≤—ñ—Ç");
        list.add("–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π");
        list.add("–∑–¥—Ä–∞–≤—Å—Ç–µ");
        list.add("–±–æ–Ω–∂—É—Ä");
        list.add("—Å–∞–ª–∞–º –º–æ–ª–µ–π–∫—É–º");
        list.add("–±–æ–Ω–∞–∑–∏–≤–∞");
        list.add("hi");
        list.add("hello");
        list.add("bounjour");

        return list.contains(message);
    }

}
