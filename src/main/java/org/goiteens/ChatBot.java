package org.goiteens;

import java.util.*;

public class ChatBot {
    private static Map<String, Integer> professions;
    private static Map<String, Integer> dreams;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String message = scanner.nextLine();

        initProfessions();
        initDreams();

        String botAnswer = process(message);
        System.out.println(botAnswer);
    }
    
    public static void initProfessions() {
        professions = new LinkedHashMap<>();

        professions.put("Designer", 20000);
        professions.put("Java", 55000);
        professions.put("Frontend", 40000);
    }

    public static void initDreams() {
        dreams = new LinkedHashMap<>();

        dreams.put("–ú–∞—à–∏–Ω–∞", 260000);
        dreams.put("iPhone", 27000);
        dreams.put("Macbook", 270000);
    }

    public static String process(String message) {
        if ("—Å–ª–∞–≤–∞ —É–∫—Ä–∞—ó–Ω—ñ".equals(message.toLowerCase())){
            return "–ì–µ—Ä–æ—è–º –°–ª–∞–≤–∞";
        }
        if ("—Å–ª–∞–≤–∞ –Ω–∞—Ü—ñ—ó".equals(message.toLowerCase())){
            return "–°–º–µ—Ä—Ç—å –í–æ—Ä–æ–≥–∞–º";
        }
        if ("–ø—É—Ç—ñ–Ω".equals(message.toLowerCase())){
            return "–•****";
        }
        if("—É–∫—Ä–∞—ó–Ω–∞".equals(message.toLowerCase()) || "üá∫üá¶".equals(message.toLowerCase()) || "üíôüíõ".equals(message.toLowerCase())){
            return "–ü–æ–Ω–∞–¥ –£—Å–µ";
        }

        if (isHelloMessage(message)) {
            String botName = "ChatBot";
            return "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —è - " + botName;
        }

        int professionSalary = find(message, professions);
        int dreamCost = find(message, dreams);

        if (professionSalary < 0) {
            return "–Ø –Ω–µ –Ω–∞–π—à–æ–≤ –≤ —Ç–≤–æ—î–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ –Ω–∞–∑–≤—É –ø—Ä–æ—Ñ–µ—Å—ñ—ó";
        }

        if (dreamCost < 0) {
            return "–Ø –Ω–µ –Ω–∞–π—à–æ–≤ –≤ —Ç–≤–æ—î–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ –º—Ä—ñ—é, —è–∫—É —Ç–∏ —Ö–æ—á–µ—à";
        }

        int monthCount = calculateMonthCount(dreamCost, professionSalary);

        return "–©–æ–± –ø–æ–ª—É—á–∏—Ç–∏ —Å–≤–æ—é –º—Ä—ñ—é, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –º—ñ—Å—è—Ü—ñ–≤: " + monthCount;
    }

    public static int find(String message, Map<String, Integer> data) {
        message = message.toLowerCase();

        for(String word: data.keySet()) {
            String lowerCasedWord = word.toLowerCase();

            if (message.contains(lowerCasedWord)) {
                return data.get(word);
            }
        }

        return -1;
    }
    
    public static int calculateMonthCount(int dreamCost, int professionSalary) {
        int monthCount = dreamCost / professionSalary;
        monthCount = validateMonthCount(monthCount);
        return monthCount;
    }

    public static int validateMonthCount(int monthCount) {
        if (monthCount == 0) {
            return 1;
        }

        return monthCount;
    }



    private static boolean isHelloMessage(String message) {
        message = message.toLowerCase();

        List<String> list = new ArrayList<>();
        list.add("–ø—Ä–∏–≤—ñ—Ç");
        list.add("–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π");
        list.add("–±–æ–Ω–∂—É—Ä");
        list.add("—Å–∞–ª–∞–º –º–æ–ª–µ–π–∫—É–º");
        list.add("–±–æ–Ω–∞–∑–∏–≤–∞");
        list.add("hi");
        list.add("hello");
        list.add("bounjour");

        return list.contains(message);
    }

    public static boolean isGameMessage(String message){
        List<String> scissors = new ArrayList<>(
                Arrays.asList("‚úÇÔ∏è","‚úåÔ∏è","üññ","‚úåÔ∏è","‚úå","‚úÇ")
        );
        List<String> paper = new ArrayList<>(
                Arrays.asList("ü§ö","üñê")
        );
        List<String> stone = new ArrayList<>(
                Arrays.asList("\uD83D\uDC4A","\uD83E\uDD1C","‚úä","ü§õ")
        );

        List<String> list = new ArrayList<>();
        list.addAll(scissors);
        list.addAll(stone);
        list.addAll(paper);
        return list.contains(message);
    }


}
