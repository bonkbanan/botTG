package org.goiteens;

import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.methods.send.SendVideo;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.util.*;


public class TelegramBot extends TelegramLongPollingBot{

    public TelegramBot() {

    }
    List<String> games = new ArrayList<>(Arrays.asList("scissors","paper","stone"));
    List<String> exchange = new ArrayList<>(Arrays.asList("dollar","euro","z≈Çoty","rubly","pound","yen"));
    List<String> trash = new ArrayList<>(Arrays.asList("—Å–ª–∞–≤–∞ —É–∫—Ä–∞—ó–Ω—ñ","help","–∫–æ–º–∞–Ω–¥–∏","–¥–æ–ø–æ–º–æ–∂–∏","–¥–æ–º–æ–≥–∞","—Å–ª–∞–≤–∞ –Ω–∞—Ü—ñ—ó","–ø—É—Ç—ñ–Ω","—É–∫—Ä–∞—ó–Ω–∞","üá∫üá¶","üíôüíõ","–ø—Ä–∏–≤—ñ—Ç","–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π","–∑–¥—Ä–∞–≤—Å—Ç–µ","–±–æ–Ω–∂—É—Ä","—Å–∞–ª–∞–º –º–æ–ª–µ–π–∫—É–º","–±–æ–Ω–∞–∑–∏–≤–∞","hi","hello","bounjour","—Å–ª–∞–≤–∞ —ñ—Å—É—Å—É —Ö—Ä–µ—Å—Ç—É"));
    List<String> trashForWeather = new ArrayList<>(Arrays.asList("—Ö–≤–∏–ª–∏–Ω–∫–∞ —Ä–µ–ª–∞–∫—Å—É","/start","–∑—ñ–≥—Ä–∞—Ç–∏ –∫–∞–º—ñ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ñ-–ø–∞–ø—ñ—Ä","–∞–∫—Ç—É–∞–ª—å–Ω–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç","–ø–∞—Ç—Ä—ñ–æ—Ç–∏—á–Ω–∞ —Ö–≤–∏–ª–∏–Ω–∫–∞","–Ω–µ—Ö–∞–π –ø—Ä–æ–±–ª–µ–º–∏ —Ç–∞ –Ω–µ–∑–≥–æ–¥–∏ –Ω–µ —Ä–æ–±–ª—è—Ç—å –≤–∞–º –≤ –∂–∏—Ç—Ç—ñ –ø–æ–≥–æ–¥–∏(–ø–æ–≥–æ–¥–∞)"));
    List<String> storage = new ArrayList<>();
    int counter = 0;


    @Override
    public void onUpdateReceived(Update update) {
        if(update.hasMessage()){
            if(update.getMessage().hasText()){
                String message = update.getMessage().getText().toLowerCase();
                storage.add(message);
                if (message.equals("/start")) {
                    SendMessage text = new SendMessage() // Create a message object object
                            .setChatId(update.getMessage().getChatId())
                            .setText("–ü—Ä–∏–≤—ñ—Ç, —è Banan's Bot.\n"+
                                    "–Ø –≤–º—ñ—é:\n" +
                                    "–í—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –ø—Ä–∏–≤—ñ—Ç,hello,hi —ñ —ñ–Ω—à—ñ –£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è.\n" +
                                    "–í–º—ñ—é –≥—Ä–∞—Ç–∏ —É –∫–∞–º—ñ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ñ-–ø–∞–ø—ñ—Ä. –î–ª—è —Ü—å–æ–≥–æ –Ω–∞–∂–º—ñ—Ç—å –Ω–∞ '–ó—ñ–≥—Ä–∞—Ç–∏ –∫–∞–º—ñ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ñ-–ø–∞–ø—ñ—Ä'.\n"+
                                    "–ú–æ–∂—É –¥–∞—Ç–∏ —Å–≤—ñ–π–∂–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç. –î–ª—è —Ü—å–æ–≥–æ –Ω–∞–∂–º—ñ—Ç—å –Ω–∞ '–ê–∫—Ç—É–∞–ª—å–Ω–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç'.\n" +
                                    "–ú–æ–∂—É —Å–∫–∞–∑–∞—Ç–∏ —Å–≤—ñ–∂–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏. –î–ª—è —Ü—å–æ–≥–æ –Ω–∞–∂–º—ñ–Ω—Ç—å –Ω–∞ '–ù–µ—Ö–∞–π –ø—Ä–æ–±–ª–µ–º–∏ —Ç–∞ –Ω–µ–∑–≥–æ–¥–∏ –Ω–µ —Ä–æ–±–ª—è—Ç—å –í–∞–º –≤ –∂–∏—Ç—Ç—ñ –ø–æ–≥–æ–¥–∏(–ø–æ–≥–æ–¥–∞)'.\n"+
                                    "–Ø–∫—â–æ —É –≤–∞—Å –±—É–≤ –≤–∞–∂–∫–∏–π –¥–µ–Ω—å, –Ω–∞–∂–º—ñ—Ç—å –Ω–∞ '–•–≤–∏–ª–∏–Ω–∫–∞ —Ä–µ–ª–∞–∫—Å—É –∑ –ö—ñ–º–æ–º'\n"+
                                    "–Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ –≤—ñ–¥—á—É—Ç–∏ —É —Å–æ–±—ñ –ø–∞—Ç—Ä—ñ–æ—Ç–∞, –Ω–∞–∂–º—ñ—Ç—å '–ü–∞—Ç—Ä—ñ–æ—Ç–∏—á–Ω–∞ —Ö–≤–∏–ª–∏–Ω–∫–∞'");
                    ReplyKeyboardMarkup keyboardMarkup = new ReplyKeyboardMarkup();
                    keyboardMarkup.setResizeKeyboard(true);
                    List<KeyboardRow> keyboard = new ArrayList<>();
                    KeyboardRow row = new KeyboardRow();
                    KeyboardRow row1 = new KeyboardRow();
                    KeyboardRow row2 = new KeyboardRow();
                    row.add("–ó—ñ–≥—Ä–∞—Ç–∏ –∫–∞–º—ñ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ñ-–ø–∞–ø—ñ—Ä");
                    row.add("–ê–∫—Ç—É–∞–ª—å–Ω–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç");
                    row1.add("–ù–µ—Ö–∞–π –ø—Ä–æ–±–ª–µ–º–∏ —Ç–∞ –Ω–µ–∑–≥–æ–¥–∏ –Ω–µ —Ä–æ–±–ª—è—Ç—å –í–∞–º –≤ –∂–∏—Ç—Ç—ñ –ø–æ–≥–æ–¥–∏(–ø–æ–≥–æ–¥–∞)");
                    row1.add("Help");
                    row2.add("–•–≤–∏–ª–∏–Ω–∫–∞ —Ä–µ–ª–∞–∫—Å—É –∑ –ö—ñ–º–æ–º");
                    row2.add("–ü–∞—Ç—Ä—ñ–æ—Ç–∏—á–Ω–∞ —Ö–≤–∏–ª–∏–Ω–∫–∞");
                    keyboard.add(row);
                    keyboard.add(row1);
                    keyboard.add(row2);

                    keyboardMarkup.setKeyboard(keyboard);
                    text.setReplyMarkup(keyboardMarkup);
                    try {
                        execute(text);
                    } catch (TelegramApiException e) {
                        e.printStackTrace();
                    }
                }
                if(message.equals("–∑—ñ–≥—Ä–∞—Ç–∏ –∫–∞–º—ñ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ñ-–ø–∞–ø—ñ—Ä")){
                    try {
                        execute(Game.sendInlineKeyBoardMessage(update.getMessage().getChatId().toString()));
                    } catch (TelegramApiException e) {
                        e.printStackTrace();
                    }
                    counter=0;
                }
                if(message.equals("–∞–∫—Ç—É–∞–ª—å–Ω–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç")){
                    try {
                        execute(Currency.sendInlineKeyBoardForeignMoney(update.getMessage().getChatId().toString()));
                    } catch (TelegramApiException e) {
                        e.printStackTrace();
                    }
                    counter = 0;
                }
                if(trash.contains(message) && storage.get(storage.size()-counter-1).equals("–Ω–µ—Ö–∞–π –ø—Ä–æ–±–ª–µ–º–∏ —Ç–∞ –Ω–µ–∑–≥–æ–¥–∏ –Ω–µ —Ä–æ–±–ª—è—Ç—å –≤–∞–º –≤ –∂–∏—Ç—Ç—ñ –ø–æ–≥–æ–¥–∏(–ø–æ–≥–æ–¥–∞)")){
                    counter =0;
                }
                if(!trash.contains(message) && !trashForWeather.contains(message) && !storage.get(storage.size()-counter-1).equals("–Ω–µ—Ö–∞–π –ø—Ä–æ–±–ª–µ–º–∏ —Ç–∞ –Ω–µ–∑–≥–æ–¥–∏ –Ω–µ —Ä–æ–±–ª—è—Ç—å –≤–∞–º –≤ –∂–∏—Ç—Ç—ñ –ø–æ–≥–æ–¥–∏(–ø–æ–≥–æ–¥–∞)")){
                    try {
                        execute(new SendMessage().setText("–í–∏–±–∞—á—Ç–µ, –∞–ª–µ —è –Ω–µ –Ω–∞–π—à–æ–≤ —É –≤–∞—à–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥—É, —è–∫—É —è –º–æ–∂—É –≤–∏–∫–æ–Ω–∞—Ç–∏(").setChatId(update.getMessage().getChatId().toString()));
                    } catch (TelegramApiException e) {
                        e.printStackTrace();
                    }
                    counter =0;
                }
                if((storage.size()>1 && storage.get(storage.size()-2).equals("–Ω–µ—Ö–∞–π –ø—Ä–æ–±–ª–µ–º–∏ —Ç–∞ –Ω–µ–∑–≥–æ–¥–∏ –Ω–µ —Ä–æ–±–ª—è—Ç—å –≤–∞–º –≤ –∂–∏—Ç—Ç—ñ –ø–æ–≥–æ–¥–∏(–ø–æ–≥–æ–¥–∞)")) || storage.get(storage.size()-counter-1).equals("–Ω–µ—Ö–∞–π –ø—Ä–æ–±–ª–µ–º–∏ —Ç–∞ –Ω–µ–∑–≥–æ–¥–∏ –Ω–µ —Ä–æ–±–ª—è—Ç—å –≤–∞–º –≤ –∂–∏—Ç—Ç—ñ –ø–æ–≥–æ–¥–∏(–ø–æ–≥–æ–¥–∞)")){
                    if(!trash.contains(message)) {
                        if (counter != 0) {
                            try {
                                execute(new SendMessage().setText(Weather.weather(message)).setChatId(update.getMessage().getChatId().toString()));
                            } catch (TelegramApiException | IOException | ParseException e) {
                                e.printStackTrace();
                            }
                            counter++;
                        }
                    }else{
                        counter = 0;
                    }
                }
                if(message.equals("–Ω–µ—Ö–∞–π –ø—Ä–æ–±–ª–µ–º–∏ —Ç–∞ –Ω–µ–∑–≥–æ–¥–∏ –Ω–µ —Ä–æ–±–ª—è—Ç—å –≤–∞–º –≤ –∂–∏—Ç—Ç—ñ –ø–æ–≥–æ–¥–∏(–ø–æ–≥–æ–¥–∞)")) {
                        forWeatherElse(update);
                        counter++;
                }
                if(message.equals("—Ö–≤–∏–ª–∏–Ω–∫–∞ —Ä–µ–ª–∞–∫—Å—É –∑ –∫—ñ–º–æ–º")) {
                    try {
                        sendVideoKim(update);
                    } catch (TelegramApiException | InterruptedException e) {
                        e.printStackTrace();
                    }
                    counter=0;
                }
                if(message.equals("–ø–∞—Ç—Ä—ñ–æ—Ç–∏—á–Ω–∞ —Ö–≤–∏–ª–∏–Ω–∫–∞")) {
                    try {
                        sendVideoPatriotic(update);
                    } catch (TelegramApiException e) {
                        e.printStackTrace();
                    }
                    counter=0;
                }
                if(trash.contains(message) && !storage.get(storage.size()-counter-1).equals("–Ω–µ—Ö–∞–π –ø—Ä–æ–±–ª–µ–º–∏ —Ç–∞ –Ω–µ–∑–≥–æ–¥–∏ –Ω–µ —Ä–æ–±–ª—è—Ç—å –≤–∞–º –≤ –∂–∏—Ç—Ç—ñ –ø–æ–≥–æ–¥–∏(–ø–æ–≥–æ–¥–∞)")){
                    if (storage.size() == 1 && !storage.get(0).equals("–Ω–µ—Ö–∞–π –ø—Ä–æ–±–ª–µ–º–∏ —Ç–∞ –Ω–µ–∑–≥–æ–¥–∏ –Ω–µ —Ä–æ–±–ª—è—Ç—å –≤–∞–º –≤ –∂–∏—Ç—Ç—ñ –ø–æ–≥–æ–¥–∏(–ø–æ–≥–æ–¥–∞)")) {
                        forCharBot(update,message);
                        counter=0;
                    }else if (storage.size() > 1 && !storage.get(storage.size() - 2).equals("–Ω–µ—Ö–∞–π –ø—Ä–æ–±–ª–µ–º–∏ —Ç–∞ –Ω–µ–∑–≥–æ–¥–∏ –Ω–µ —Ä–æ–±–ª—è—Ç—å –≤–∞–º –≤ –∂–∏—Ç—Ç—ñ –ø–æ–≥–æ–¥–∏(–ø–æ–≥–æ–¥–∞)")) {
                        forCharBot(update,message);
                        counter=0;
                    }
                }
            }
        }else if(update.hasCallbackQuery()) {
            if (games.contains(update.getCallbackQuery().getData())) {
                try {
                    execute(new SendMessage().setText(Game.game(update.getCallbackQuery().getData()))
                            .setChatId(update.getCallbackQuery().getMessage().getChatId()));
                } catch (TelegramApiException e) {
                    e.printStackTrace();
                }
            }else if(exchange.contains(update.getCallbackQuery().getData())){
                try {
                    execute(new SendMessage().setText(Currency.exchangeRating(update.getCallbackQuery().getData()))
                            .setChatId(update.getCallbackQuery().getMessage().getChatId()));
                } catch (TelegramApiException | IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    public void forCharBot(Update update,String message){
        String response = null;
        try {
            response = ChatBot.process(message);
            sendText((update.getMessage().getChatId().toString()), response);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void forWeatherElse(Update update){
        try {
            execute(new SendMessage().setText("–í–≤–µ–¥—ñ—Ç—å –±—É–¥—å –ª–∞—Å–∫–∞ '{–í–∞—à–µ –º—ñ—Å—Ç–æ} {(–∑–∞ –±–∞–∂–∞–Ω–Ω—è–º) –ú—ñ—Å—è—Ü—å-–¥–µ–Ω—å —á–µ—Ä–µ–∑ '-'}'").setChatId(update.getMessage().getChatId().toString()));
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    private void sendText(String chatId, String text) {
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(chatId);
        sendMessage.setText(text);
        try {
            execute(sendMessage);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    public void sendVideoKim(Update message) throws TelegramApiException, InterruptedException {
        File Videofile = new File("/Users/bonkbanan/Desktop/botTG/src/main/java/org/videos/HD Epic Sax Gandalf.mp4");
        execute(sendPhoto(message));
        Thread.sleep(1000);
        execute(new SendMessage().setText("–†–æ–∑—Å–ª–∞–±—Ç–µ—Å—å, —Ç–∞ –ø—Ä–∏–π–º—ñ—Ç—å –∑—Ä—É—á–Ω–µ –¥–ª—è –í–∞—Å –ø–æ–ª–æ–∂–µ–Ω–Ω—è. (–ó–∞—á–µ–∫–∞–π—Ç–µ)").setChatId(message.getMessage().getChatId()));
        execute(sendVideo(message,Videofile));
    }

    public void sendVideoPatriotic(Update message) throws TelegramApiException {
        File Videofile = new File("/Users/bonkbanan/Desktop/botTG/src/main/java/org/videos/Patriotic.mp4");
        execute(sendVideo(message,Videofile));
    }

    public SendVideo sendVideo(Update message,File Videofile){
        SendVideo sendVideo = new SendVideo();
        sendVideo.setChatId(message.getMessage().getChatId().toString());
        sendVideo.setVideo(Videofile);
        sendVideo.setWidth(1280);
        sendVideo.setHeight(720);
        return sendVideo;
    }

    public SendPhoto sendPhoto(Update message){
        File photoFile = new File("/Users/bonkbanan/Desktop/botTG/src/main/java/org/videos/KimWearsSocks.jpeg");
        SendPhoto sendPhoto = new SendPhoto();
        sendPhoto.setChatId(message.getMessage().getChatId().toString());
        sendPhoto.setPhoto(photoFile);
        return sendPhoto;
    }

    @Override
    public String getBotUsername() {
        return "Banan's Bot";
    }

    @Override
    public String getBotToken() {
        return "1786184098:AAFlKIERGm8vfnNK25L_glvAmcut5HZTSDs";
    }
}
